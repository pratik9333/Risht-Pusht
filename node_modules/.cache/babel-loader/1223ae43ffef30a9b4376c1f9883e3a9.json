{"ast":null,"code":"var _jsxFileName = \"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\"; //API\n\nimport { getOrders } from \"../API/Order\";\nimport Ordercard from \"../Components/Ordercard\";\nimport { ADD_ORDERS } from \"../Context/action.types\";\nimport { AppContext } from \"../Context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const [Orders, setOrders] = useState(state.Orders.orders);\n  useEffect(() => {\n    getOrders().then(response => {\n      if (response.err) {\n        return alert(\"Orders cannot be fetched\");\n      } else {\n        dispatch({\n          type: ADD_ORDERS,\n          payload: response\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order mb-4 d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"bold-text\",\n      children: \"view all orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), !Orders ? \"\" : Orders.map(order => /*#__PURE__*/_jsxDEV(Ordercard, {\n      orderid: order.Order_ID,\n      datetime: order.Date,\n      buyername: order.Buyers_name,\n      purchasedworth: order.Total_price,\n      orders: order.Total_price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"rT96zknzvjMsWP5vYwmR2sCVHrk=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Orders.js"],"names":["React","useEffect","useState","useContext","getOrders","Ordercard","ADD_ORDERS","AppContext","Orders","state","dispatch","setOrders","orders","then","response","err","alert","type","payload","map","order","Order_ID","Date","Buyers_name","Total_price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD,C,CAEA;;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBP,UAAU,CAACI,UAAD,CAAtC;AAEA,QAAM,CAACC,MAAD,EAASG,SAAT,IAAsBT,QAAQ,CAACO,KAAK,CAACD,MAAN,CAAaI,MAAd,CAApC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,SAAS,GAAGS,IAAZ,CAAkBC,QAAD,IAAc;AAC7B,UAAIA,QAAQ,CAACC,GAAb,EAAkB;AAChB,eAAOC,KAAK,CAAC,0BAAD,CAAZ;AACD,OAFD,MAEO;AACLN,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAEX,UAAR;AAAoBY,UAAAA,OAAO,EAAEJ;AAA7B,SAAD,CAAR;AACD;AACF,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACN,MAAD,GACG,EADH,GAEGA,MAAM,CAACW,GAAP,CAAYC,KAAD,iBACT,QAAC,SAAD;AACE,MAAA,OAAO,EAAEA,KAAK,CAACC,QADjB;AAEE,MAAA,QAAQ,EAAED,KAAK,CAACE,IAFlB;AAGE,MAAA,SAAS,EAAEF,KAAK,CAACG,WAHnB;AAIE,MAAA,cAAc,EAAEH,KAAK,CAACI,WAJxB;AAKE,MAAA,MAAM,EAAEJ,KAAK,CAACI;AALhB;AAAA;AAAA;AAAA;AAAA,YADF,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/BD;;GAAMhB,M;;KAAAA,M;AAiCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\n//API\nimport { getOrders } from \"../API/Order\";\n\nimport Ordercard from \"../Components/Ordercard\";\nimport { ADD_ORDERS } from \"../Context/action.types\";\nimport { AppContext } from \"../Context/Context\";\n\nconst Orders = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const [Orders, setOrders] = useState(state.Orders.orders);\n\n  useEffect(() => {\n    getOrders().then((response) => {\n      if (response.err) {\n        return alert(\"Orders cannot be fetched\");\n      } else {\n        dispatch({ type: ADD_ORDERS, payload: response });\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"order mb-4 d-flex flex-column\">\n      <h1 className=\"bold-text\">view all orders</h1>\n      {!Orders\n        ? \"\"\n        : Orders.map((order) => (\n            <Ordercard\n              orderid={order.Order_ID}\n              datetime={order.Date}\n              buyername={order.Buyers_name}\n              purchasedworth={order.Total_price}\n              orders={order.Total_price}\n            />\n          ))}\n    </div>\n  );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}