[{"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/index.js":"1","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/App.js":"2","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Nav.js":"3","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Adminpanel.js":"4","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Orders.js":"5","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Ordercard.js":"6","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Category.js":"7","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Categorycard.js":"8","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Upload.js":"9","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Item.js":"10","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Card.js":"11","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Statistics.js":"12","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/API/Order.js":"13","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/backend.js":"14","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/API/Category.js":"15","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Context/Context.js":"16","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Context/reducer.js":"17","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Context/action.types.js":"18","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/SubCategory.js":"19","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/API/Product.js":"20"},{"size":263,"mtime":1637999294840,"results":"21","hashOfConfig":"22"},{"size":2200,"mtime":1638612630577,"results":"23","hashOfConfig":"22"},{"size":334,"mtime":1637997451612,"results":"24","hashOfConfig":"22"},{"size":1275,"mtime":1638189325202,"results":"25","hashOfConfig":"22"},{"size":877,"mtime":1638602147209,"results":"26","hashOfConfig":"22"},{"size":1205,"mtime":1638300591862,"results":"27","hashOfConfig":"22"},{"size":4406,"mtime":1638617359638,"results":"28","hashOfConfig":"22"},{"size":1484,"mtime":1638616089944,"results":"29","hashOfConfig":"22"},{"size":4497,"mtime":1638611877845,"results":"30","hashOfConfig":"22"},{"size":5234,"mtime":1638617840426,"results":"31","hashOfConfig":"22"},{"size":1126,"mtime":1638188977949,"results":"32","hashOfConfig":"22"},{"size":1054,"mtime":1638188943416,"results":"33","hashOfConfig":"22"},{"size":424,"mtime":1638619209266,"results":"34","hashOfConfig":"22"},{"size":180,"mtime":1638304332688,"results":"35","hashOfConfig":"22"},{"size":3954,"mtime":1638619127079,"results":"36","hashOfConfig":"22"},{"size":99,"mtime":1638528864465,"results":"37","hashOfConfig":"22"},{"size":935,"mtime":1638612557205,"results":"38","hashOfConfig":"22"},{"size":264,"mtime":1638602600477,"results":"39","hashOfConfig":"22"},{"size":4397,"mtime":1638617552612,"results":"40","hashOfConfig":"22"},{"size":2060,"mtime":1638619250535,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1m8yd76",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/index.js",[],["91","92"],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/App.js",["93","94"],"import React, { useState, useReducer, useLayoutEffect } from \"react\";\n\nimport \"./App.css\";\n\nimport { Route, Routes } from \"react-router-dom\";\n\n//Components\nimport Nav from \"./Components/Nav\";\n\n//Pages\nimport Adminpanel from \"./Pages/Adminpanel\";\nimport Orders from \"./Pages/Orders\";\nimport Category from \"./Pages/Category\";\nimport Item from \"./Pages/Item\";\nimport Statistics from \"./Pages/Statistics\";\nimport SubCategory from \"./Pages/SubCategory\";\n\nimport { AppContext } from \"./Context/Context\";\nimport { reducer, initialState } from \"./Context/reducer\";\n\n//API\nimport { getAllCategory, getAllSubCategory } from \"./API/Category\";\nimport { getOrders } from \"./API/Order\";\n\n//Actions\nimport { ADD_CATEGORY, ADD_ORDERS, ADD_PRODUCTS } from \"./Context/action.types\";\nimport { getAllProducts } from \"./API/Product\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { loading } = state;\n\n  useLayoutEffect(() => {\n    //getAllCategory\n    getAllCategory().then((response) => {\n      if (response.err) {\n        return alert(\"Cannot Fetch Categories\");\n      } else {\n        dispatch({ type: ADD_CATEGORY, payload: response });\n      }\n    });\n\n    //getOrders\n    getOrders().then((response) => {\n      if (response.err) {\n        return alert(\"Orders cannot be fetched\");\n      } else {\n        dispatch({ type: ADD_ORDERS, payload: response });\n      }\n    });\n\n    getAllProducts().then((response) => {\n      if (response.err) {\n        return alert(\"Orders cannot be fetched\");\n      } else {\n        dispatch({ type: ADD_PRODUCTS, payload: response });\n      }\n    });\n  }, [loading]);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <div className=\"App\">\n        <Nav />\n        <Routes>\n          <Route path=\"/\" element={<Adminpanel />} />\n          <Route path=\"orders\" element={<Orders />} />\n          <Route path=\"category\" element={<Category />} />\n          <Route path=\"item\" element={<Item />} />\n          <Route path=\"statistics\" element={<Statistics />} />\n          <Route path=\"subcategory/:categoryid\" element={<SubCategory />} />\n        </Routes>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Nav.js",[],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Adminpanel.js",[],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Orders.js",["95","96"],"import React, { useEffect, useContext } from \"react\";\nimport Ordercard from \"../Components/Ordercard\";\nimport { ADD_ORDERS, CALL_API } from \"../Context/action.types\";\nimport { AppContext } from \"../Context/Context\";\n\nconst Orders = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  useEffect(() => {\n    dispatch({ type: CALL_API });\n  }, []);\n\n  return (\n    <div className=\"order mb-4 d-flex flex-column\">\n      <h1 className=\"bold-text\">view all orders</h1>\n      {state.Orders.orders\n        ? state.Orders.orders.map((order) => (\n            <Ordercard\n              orderid={order.Order_ID}\n              datetime={order.Date}\n              buyername={order.Buyers_name}\n              purchasedworth={order.Total_price}\n              orders={order.Total_price}\n            />\n          ))\n        : \"LOADING...\"}\n    </div>\n  );\n};\n\nexport default Orders;\n","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Ordercard.js",[],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Category.js",["97","98"],"import React, { useState, useContext, useEffect } from \"react\";\n\nimport Categorycard from \"../Components/Categorycard\";\nimport Upload from \"../Components/Upload\";\n\nimport { AppContext } from \"../Context/Context\";\nimport { ADD_CATEGORY, CALL_API } from \"../Context/action.types\";\n\n//APIS\nimport {\n  addCategory,\n  deleteCategory,\n  editCategory,\n  getImage,\n} from \"../API/Category\";\n\nconst Category = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const [File, setFile] = useState(null);\n  const [Status, setStatus] = useState(false);\n  const [EditStatus, setEditStatus] = useState(false);\n  const [CategoryId, setCategoryId] = useState();\n\n  const [formdata, setFormData] = useState({\n    name: \"\",\n    have_sub: true,\n    image_url: \"\",\n    description: \"\",\n  });\n\n  const setNameValue = (e) => {\n    setFormData({ ...formdata, name: e.target.value });\n  };\n\n  const setDescriptionValue = (e) => {\n    setFormData({ ...formdata, description: e.target.value });\n  };\n\n  const setFileHandler = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const EditHandler = (id, name, img, description) => {\n    setEditStatus(!EditStatus);\n    setCategoryId(id);\n    setFormData({\n      ...formdata,\n      name: name,\n      description: description,\n      image_url: img,\n    });\n    window.scrollTo(0, 0);\n  };\n\n  if (File) {\n    const image = new FormData();\n\n    image.append(\"file\", File);\n\n    getImage(image).then((response) => {\n      setFormData({\n        ...formdata,\n        image_url: response.url,\n      });\n      alert(\"Image Uploaded Successfully..\");\n    });\n\n    setFile(null);\n  }\n\n  const onDelete = (key) => {\n    deleteCategory(key).then((response) => {\n      if (response) {\n        setStatus(!Status);\n      } else {\n        alert(\"Deleted UnSuccessfull\");\n      }\n    });\n  };\n\n  console.log(formdata);\n\n  const handleForm = (e) => {\n    e.preventDefault();\n\n    if (!EditStatus) {\n      addCategory(formdata).then((response) => {\n        if (response.err) {\n          return alert(\"Failed to Add Category...\");\n        } else {\n          alert(\"Category Added Successfully!\");\n        }\n      });\n    } else {\n      editCategory({\n        cid: CategoryId,\n        name: formdata.name,\n        image_url: formdata.image_url,\n        description: formdata.description,\n      }).then((response) => {\n        if (response.err) {\n          alert(\"Failed to upload category\");\n        } else {\n          alert(\"Category Edited Successfully\");\n        }\n      });\n    }\n\n    setFormData({\n      ...formdata,\n      name: \"\",\n      description: \"\",\n      image_url: \"\",\n    });\n    setEditStatus(!EditStatus);\n    setStatus(!Status);\n  };\n\n  useEffect(() => {\n    dispatch({ type: CALL_API });\n  }, [Status]);\n\n  return (\n    <div>\n      <h1 className=\"bold-text\">\n        {EditStatus ? \"Edit Category\" : \"Add Category\"}\n      </h1>\n      <div className=\"add-category\">\n        <Upload\n          add={EditStatus ? \"Edit Name\" : \"Add Name\"}\n          name={formdata.name}\n          descrp={formdata.description}\n          des={EditStatus ? \"Edit Description\" : \"Add Description\"}\n          setName={setNameValue}\n          setDescription={setDescriptionValue}\n          setFileHandler={setFileHandler}\n          pname={EditStatus ? \"Edit Category\" : \"Add Category\"}\n          handleForm={handleForm}\n        />\n      </div>\n      {state.Categories.Categories ? (\n        <>\n          <div className=\"modify-delete\" style={{ marginTop: \"120px\" }}>\n            <h1 className=\"bold-text\">MODIFY/DELETE CATEGORY</h1>\n            <div className=\"row g-4 text-center\">\n              {state.Categories.Categories\n                ? state.Categories.Categories.map((category, index) => (\n                    <div className=\"col-md-2\" key={index}>\n                      <Categorycard\n                        categoryid={category.cid}\n                        onDelete={onDelete}\n                        name={category.name}\n                        img={category.url}\n                        EditHandler={EditHandler}\n                        Description={category.description}\n                      />\n                    </div>\n                  ))\n                : \"\"}\n            </div>\n          </div>\n        </>\n      ) : (\n        <h2 className=\"mt-5 text-center\" style={{ marginTop: \"100px\" }}>\n          No Categories\n        </h2>\n      )}\n    </div>\n  );\n};\n\nexport default Category;\n","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Categorycard.js",[],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Upload.js",["99","100","101"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { getAllSubCategory } from \"../API/Category\";\n\nimport vector from \"../Assets/Images/Vector.png\";\nimport { AppContext } from \"../Context/Context\";\n\nconst Upload = ({\n  setName,\n  setDescription,\n  setShortDescription,\n  setCategoryId,\n  setSubCatId,\n  setPriceForm,\n  setFileHandler,\n  add,\n  handleForm,\n  des,\n  name,\n  descrp,\n  price,\n  shortdes,\n}) => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const [subcat, setSubCat] = useState([]);\n\n  const getCatId = (e) => {\n    setCategoryId(e);\n\n    //getAllSubCategory\n    getAllSubCategory(e.target.value).then((response) => {\n      if (response.err) {\n        return alert(\"Cannot Fetch Categories\");\n      } else {\n        setSubCat(response.Sub_Categories);\n      }\n    });\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleForm}>\n        <div className=\"row align-items-center justify-content-around\">\n          <div className=\"col-md-5 pt-4 pb-4\">\n            <div\n              style={{ borderStyle: \"dashed\", padding: \"50px\" }}\n              className=\"Card  d-flex flex-column text-center align-items-center\"\n            >\n              <img src={vector} className=\"imgvec\" alt=\"\" />\n              <input\n                type=\"file\"\n                name=\"uploadimage\"\n                className=\"custom-file-input\"\n                onChange={setFileHandler}\n              />\n              <span className=\"upload\">Upload File</span>\n            </div>\n          </div>\n          <div className=\"col-md-5\">\n            <div className=\"note\">\n              <p>Add an Image of 45px X 45px dimension for best visibility</p>\n            </div>\n            <div className=\"input-category-name\">\n              <input\n                type=\"text\"\n                placeholder={add}\n                value={name}\n                onChange={setName}\n                className=\"category\"\n                required\n              />\n              {des ? (\n                <input\n                  type=\"text\"\n                  placeholder={des}\n                  value={descrp}\n                  onChange={setDescription}\n                  className=\"category\"\n                  required\n                />\n              ) : (\n                \"\"\n              )}\n              {setSubCatId ? (\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter Short Description\"\n                  value={shortdes}\n                  onChange={setShortDescription}\n                  className=\"category\"\n                  required\n                />\n              ) : (\n                \"\"\n              )}\n              {setSubCatId ? (\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter Price\"\n                  value={price}\n                  onChange={setPriceForm}\n                  className=\"category\"\n                  required\n                />\n              ) : (\n                \"\"\n              )}\n\n              {setSubCatId ? (\n                <select\n                  onChange={getCatId}\n                  placeholder=\"Select categories\"\n                  className=\"category\"\n                >\n                  <option value=\"select\">Select Category</option>\n                  {state.Categories.Categories\n                    ? state.Categories.Categories.map((category, index) => (\n                        <option id={index} value={category.cid}>\n                          {category.name}\n                        </option>\n                      ))\n                    : \"\"}\n                </select>\n              ) : (\n                \"\"\n              )}\n\n              {setCategoryId ? (\n                <select\n                  className=\"form-control\"\n                  placeholder=\"Select Subcategory\"\n                  onChange={setSubCatId}\n                  className=\"category\"\n                >\n                  <option value=\"select\">Select Sub Category</option>\n                  {subcat\n                    ? subcat.map((subcat) => (\n                        <option value={subcat.scid}>{subcat.name}</option>\n                      ))\n                    : \"\"}\n                </select>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <div className=\"add-category\">\n              <button type=\"submit\">{add}</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Item.js",["102","103"],"import React, { useState, useEffect, useContext } from \"react\";\n\n//components\nimport Upload from \"../Components/Upload\";\nimport Categorycard from \"../Components/Categorycard\";\n\n//image\nimport bgimg from \"../Assets/Images/bgimage.png\";\n\nimport { AppContext } from \"../Context/Context\";\n\n//API\nimport { getImage } from \"../API/Category\";\nimport { CALL_API } from \"../Context/action.types\";\nimport { addProduct, deleteProduct, editProduct } from \"../API/Product\";\n\nconst Item = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const [File, setFile] = useState(null);\n  const [Status, setStatus] = useState(false);\n  const [EditStatus, setEditStatus] = useState(false);\n  const [ProductId, setProductId] = useState();\n\n  const [formdata, setFormData] = useState({\n    cid: \"\",\n    scid: \"\",\n    name: \"\",\n    image_url: \"\",\n    price: \"\",\n    in_stock: true,\n    short_description: \"\",\n    description: \"\",\n  });\n\n  console.log(formdata);\n\n  const setNameValue = (e) => {\n    setFormData({ ...formdata, name: e.target.value });\n  };\n\n  const setDescriptionValue = (e) => {\n    setFormData({ ...formdata, description: e.target.value });\n  };\n\n  const setShortDescriptionValue = (e) => {\n    setFormData({ ...formdata, short_description: e.target.value });\n  };\n\n  const setCategoryId = (e) => {\n    console.log(e.target.value);\n    setFormData({ ...formdata, cid: e.target.value });\n  };\n\n  const setSubCatId = (e) => {\n    setFormData({ ...formdata, scid: e.target.value });\n  };\n\n  const setPriceForm = (e) => {\n    setFormData({ ...formdata, price: e.target.value });\n  };\n\n  const setFileHandler = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleForm = (e) => {\n    e.preventDefault();\n\n    if (!EditStatus) {\n      addProduct(formdata).then((response) => {\n        if (response.err) {\n          console.log(response.err);\n        } else {\n          alert(\"Product Added Successfully\");\n        }\n      });\n    } else {\n      editProduct({\n        pid: ProductId,\n        name: formdata.name,\n        image_url: formdata.image_url,\n        price: formdata.price,\n        in_stock: true,\n        short_description: formdata.short_description,\n        description: formdata.description,\n      }).then((response) => {\n        if (response.err) {\n          alert(\"Failed to upload category\");\n        } else {\n          alert(\"Product Edited Successfully\");\n        }\n      });\n    }\n\n    setFormData({\n      ...formdata,\n      cid: \"\",\n      scid: \"\",\n      name: \"\",\n      image_url: \"\",\n      price: \"\",\n      in_stock: true,\n      short_description: \"\",\n      description: \"\",\n    });\n\n    setProductId(null);\n    setStatus(!Status);\n    setEditStatus(!EditStatus);\n  };\n\n  const EditHandler = (id, name, img, description, sd, price) => {\n    setEditStatus(!EditStatus);\n    setProductId(id);\n    setFormData({\n      ...formdata,\n      name: name,\n      description: description,\n      short_description: sd,\n      price: price,\n      image_url: img,\n    });\n    window.scrollTo(0, 0);\n  };\n\n  const onDelete = (key) => {\n    console.log(key);\n    deleteProduct(key).then((response) => {\n      if (response) {\n        setStatus(!Status);\n      } else {\n        alert(\"Deleted UnSuccessfull\");\n      }\n    });\n  };\n\n  if (File) {\n    const image = new FormData();\n\n    image.append(\"file\", File);\n\n    getImage(image).then((response) => {\n      setFormData({\n        ...formdata,\n        image_url: response.url,\n      });\n      alert(\"Image Uploaded Successfully..\");\n    });\n\n    setFile(null);\n  }\n\n  useEffect(() => {\n    dispatch({ type: CALL_API });\n  }, [Status]);\n\n  return (\n    <div>\n      <h1 className=\"bold-text\">{!EditStatus ? \"Add Item\" : \"Update Item\"}</h1>\n      <div className=\"add-item\">\n        <Upload\n          add=\"Add Product\"\n          des=\"Item Description\"\n          name={formdata.name}\n          price={formdata.price}\n          descrp={formdata.description}\n          shortdes={formdata.short_description}\n          setName={setNameValue}\n          setDescription={setDescriptionValue}\n          setShortDescription={setShortDescriptionValue}\n          setCategoryId={setCategoryId}\n          setSubCatId={setSubCatId}\n          setPriceForm={setPriceForm}\n          setFileHandler={setFileHandler}\n          handleForm={handleForm}\n          Categories={state}\n        />\n      </div>\n      <div className=\"modify-delete\" style={{ marginTop: \"120px\" }}>\n        <h1 className=\"bold-text\">MODIFY/DELETE ITEM</h1>\n        <div className=\"row g-4 text-center\">\n          {state.Products.Products\n            ? state.Products.Products.map((category, index) => (\n                <div className=\"col-md-2\" key={index}>\n                  <Categorycard\n                    categoryid={category.pid}\n                    onDelete={onDelete}\n                    name={category.name}\n                    img={category.image_url}\n                    Description={category.description}\n                    short_description={category.short_description}\n                    price={category.price}\n                    EditHandler={EditHandler}\n                  />\n                </div>\n              ))\n            : \"\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Item;\n","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Components/Card.js",[],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/Statistics.js",[],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/API/Order.js",["104"],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/backend.js",[],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/API/Category.js",["105"],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Context/Context.js",["106"],"import { createContext, useReducer } from \"react\";\n\nexport const AppContext = createContext(null);\n","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Context/reducer.js",["107","108"],"import {\n  ADD_ORDERS,\n  ADD_CATEGORY,\n  CALL_API,\n  ADD_SUBCATEGORY,\n  ADD_CATEGORY_ID,\n  ADD_PRODUCTS,\n} from \"../Context/action.types\";\n\nexport const initialState = {\n  Categories: [],\n  Orders: [],\n  Products: [],\n  SubCategories: [],\n  loading: false,\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case CALL_API: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case ADD_PRODUCTS: {\n      return {\n        ...state,\n        Products: action.payload,\n      };\n    }\n    case ADD_SUBCATEGORY: {\n      return {\n        ...state,\n        SubCategories: action.payload,\n        loading: false,\n      };\n    }\n    case ADD_CATEGORY: {\n      return {\n        ...state,\n        Categories: action.payload,\n        loading: false,\n      };\n    }\n    case ADD_ORDERS: {\n      return {\n        ...state,\n        Orders: action.payload,\n        loading: false,\n      };\n    }\n  }\n};\n","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Context/action.types.js",[],"/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/Pages/SubCategory.js",["109"],"import React, { useState, useContext, useEffect } from \"react\";\n\nimport Categorycard from \"../Components/Categorycard\";\n\nimport Upload from \"../Components/Upload\";\n\nimport { AppContext } from \"../Context/Context\";\nimport { ADD_SUBCATEGORY } from \"../Context/action.types\";\n\n//APIS\nimport {\n  addSubCategory,\n  getAllSubCategory,\n  deleteSubCategory,\n  getImage,\n  editSubCategory,\n} from \"../API/Category\";\nimport { useParams } from \"react-router\";\n\nconst SubCategory = () => {\n  const { categoryid } = useParams();\n  const { state, dispatch } = useContext(AppContext);\n  const [File, setFile] = useState(null);\n  const [Status, setStatus] = useState(false);\n  const [EditStatus, setEditStatus] = useState(false);\n\n  const [formdata, setFormData] = useState({\n    name: \"\",\n    cid: categoryid,\n    scid: \"\",\n    image_url: \"\",\n  });\n\n  const setNameValue = (e) => {\n    setFormData({ ...formdata, name: e.target.value });\n  };\n\n  console.log(formdata);\n\n  const setFileHandler = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const EditHandler = (id, name, img) => {\n    setEditStatus(!EditStatus);\n    setFormData({\n      ...formdata,\n      scid: id,\n      name: name,\n      image_url: img,\n    });\n    window.scrollTo(0, 0);\n  };\n\n  if (File) {\n    const image = new FormData();\n\n    image.append(\"file\", File);\n\n    getImage(image).then((response) => {\n      setFormData({\n        ...formdata,\n        image_url: response.url,\n      });\n      alert(\"Image Uploaded Successfully..\");\n    });\n\n    setFile(null);\n  }\n\n  const onDelete = (key) => {\n    console.log(key);\n    deleteSubCategory(key).then((response) => {\n      if (response) {\n        console.log(response);\n        setStatus(!Status);\n      } else {\n        alert(\"Deleted Successfull\");\n      }\n    });\n  };\n\n  const handleForm = (e) => {\n    e.preventDefault();\n\n    if (!EditStatus) {\n      addSubCategory({\n        name: formdata.name,\n        cid: formdata.cid,\n        image_url: formdata.image_url,\n      }).then((response) => {\n        if (response.err) {\n          return alert(\"Failed to Add Category...\");\n        } else {\n          alert(\"SubCategory Added Successfully!\");\n        }\n      });\n    } else {\n      editSubCategory({\n        scid: formdata.scid,\n        name: formdata.name,\n        image_url: formdata.image_url,\n      }).then((response) => {\n        if (response.err) {\n          alert(\"Failed to upload category\");\n        } else {\n          alert(\"SubCategory Edited Successfully\");\n        }\n      });\n    }\n\n    setFormData({\n      ...formdata,\n      name: \"\",\n      description: \"\",\n      image_url: \"\",\n    });\n    setStatus(!Status);\n    setEditStatus(!EditStatus);\n  };\n\n  useEffect(() => {\n    //getAllSubCategory\n    getAllSubCategory(formdata.cid).then((response) => {\n      if (response.err) {\n        return alert(\"Cannot Fetch Categories\");\n      } else {\n        dispatch({ type: ADD_SUBCATEGORY, payload: response });\n      }\n    });\n  }, [Status]);\n\n  return (\n    <div>\n      {true ? (\n        <>\n          <h1 className=\"bold-text\">\n            {EditStatus ? \"Edit SubCategory\" : \"Add SubCategory\"}\n          </h1>\n          <div className=\"add-category\">\n            <Upload\n              add={EditStatus ? \"Edit Name\" : \"Add Name\"}\n              name={formdata.name}\n              setName={setNameValue}\n              setFileHandler={setFileHandler}\n              pname={EditStatus ? \"Edit Sub Category\" : \"Add Sub Category\"}\n              handleForm={handleForm}\n            />\n          </div>\n          <div className=\"modify-delete\" style={{ marginTop: \"120px\" }}>\n            <h1 className=\"bold-text\">MODIFY/DELETE SUBCATEGORY</h1>\n            <div className=\"row g-4 text-center\">\n              {state.SubCategories.Sub_Categories\n                ? state.SubCategories.Sub_Categories.map((category, index) => (\n                    <div className=\"col-md-2\" key={index}>\n                      <Categorycard\n                        categoryid={category.scid}\n                        onDelete={onDelete}\n                        name={category.name}\n                        img={category.url}\n                        EditHandler={EditHandler}\n                      />\n                    </div>\n                  ))\n                : \"\"}\n            </div>\n          </div>\n        </>\n      ) : (\n        \"Loading....\"\n      )}\n    </div>\n  );\n};\n\nexport default SubCategory;\n","/Users/pratikaswani/Documents/Web Application Projects/Risht Pusht/src/API/Product.js",["110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":22,"column":26,"nodeType":"117","messageId":"118","endLine":22,"endColumn":43},{"ruleId":"115","severity":1,"message":"120","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":11,"column":6,"nodeType":"123","endLine":11,"endColumn":8,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"125","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":122,"column":6,"nodeType":"123","endLine":122,"endColumn":14,"suggestions":"126"},{"ruleId":"115","severity":1,"message":"127","line":1,"column":29,"nodeType":"117","messageId":"118","endLine":1,"endColumn":38},{"ruleId":"115","severity":1,"message":"128","line":23,"column":18,"nodeType":"117","messageId":"118","endLine":23,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":133,"column":19,"nodeType":"131","messageId":"132","endLine":133,"endColumn":39},{"ruleId":"115","severity":1,"message":"133","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":156,"column":6,"nodeType":"123","endLine":156,"endColumn":14,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"135","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":20},{"ruleId":"115","severity":1,"message":"135","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":20},{"ruleId":"115","severity":1,"message":"136","line":1,"column":25,"nodeType":"117","messageId":"118","endLine":1,"endColumn":35},{"ruleId":"115","severity":1,"message":"137","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":19,"column":3,"nodeType":"140","messageId":"141","endLine":53,"endColumn":4},{"ruleId":"121","severity":1,"message":"142","line":131,"column":6,"nodeType":"123","endLine":131,"endColumn":14,"suggestions":"143"},{"ruleId":"115","severity":1,"message":"135","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":20},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getAllSubCategory' is defined but never used.","'ADD_ORDERS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'ADD_CATEGORY' is defined but never used.",["147"],"'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'bgimg' is defined but never used.",["148"],"'backendurl' is defined but never used.","'useReducer' is defined but never used.","'ADD_CATEGORY_ID' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'dispatch' and 'formdata.cid'. Either include them or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [dispatch]",{"range":"157","text":"158"},"Update the dependencies array to be: [Status, dispatch]",{"range":"159","text":"160"},{"range":"161","text":"160"},"Update the dependencies array to be: [Status, dispatch, formdata.cid]",{"range":"162","text":"163"},[354,356],"[dispatch]",[2721,2729],"[Status, dispatch]",[3588,3596],[2951,2959],"[Status, dispatch, formdata.cid]"]